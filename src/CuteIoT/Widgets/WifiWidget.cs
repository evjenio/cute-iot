using System;
using CuteIoT.Epaper;
using nanoFramework.Networking;

namespace CuteIoT.Widgets
{
    internal class WifiWidget
    {
        public int X { get; set; } = 0;
        public int Y { get; set; } = 0;
        public int H { get; set; } = 24;
        public int W { get; set; } = 24;

        private static readonly byte[] On = {
            // 'free-icon-wifi-6540529', 24x24px
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xf8, 0x00, 0x1f, 0xe0,
            0xff, 0x07, 0x87, 0xff, 0xe1, 0x9f, 0xff, 0xf9, 0xff, 0x00, 0xff, 0xfc, 0x00, 0x3f, 0xf0, 0x7e,
            0x0f, 0xf3, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0x81, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0x3c, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
        };

        private static readonly byte[] NoSignal = {
            // 'free-icon-wifi-6540532', 24x24px
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xc7, 0x00, 0xff, 0xe3, 0x80, 0x0f, 0xe1,
            0xff, 0x07, 0x80, 0xff, 0xe1, 0x9c, 0x7f, 0xf9, 0xfe, 0x38, 0xff, 0xfc, 0x1c, 0x3f, 0xf0, 0x0e,
            0x0f, 0xf3, 0xc7, 0xcf, 0xff, 0xe3, 0xff, 0xff, 0x81, 0xff, 0xff, 0x00, 0xff, 0xff, 0x3c, 0x7f,
            0xff, 0xfe, 0x3f, 0xff, 0xff, 0x1f, 0xff, 0xc3, 0x8f, 0xff, 0xe7, 0xcf, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
        };

        public void Draw(Display display)
        {
            if (WifiNetworkHelper.Status == NetworkHelperStatus.NetworkIsReady)
            {
                display.DrawBitmap(On, X, Y, W, H, Color.White);
            }
            else
            {
                display.DrawBitmap(NoSignal, X, Y, W, H, Color.White);
            }
            display.UpdateWindow(X, Y, W, H);
        }
    }
}
